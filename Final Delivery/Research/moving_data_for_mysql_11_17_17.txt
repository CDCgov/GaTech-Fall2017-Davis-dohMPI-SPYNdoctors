
https://stackoverflow.com/questions/33210678/docker-mount-directory-from-one-container-to-another

https://dzone.com/articles/docker-backup-your-data-volumes-to-docker-hub






docker run --name my_data -v /var/lib/mysql -t -i  ubuntu /bin/bash

		//  then leave this terminal at container prompt and do everything else in another terminal:

docker run --name mysql_for_data --volumes-from my_data  -e MYSQL_ROOT_PASSWORD=cs6440exp -d mysql:5.7

docker run -it --link mysql_for_data:mysql --rm mysql sh -c 'exec mysql -h"$MYSQL_PORT_3306_TCP_ADDR" -P"$MYSQL_PORT_3306_TCP_PORT" -uroot -p"$MYSQL_ENV_MYSQL_ROOT_PASSWORD"'


		//then populate some data
		// after all necessary data are in place , run: 



docker run --rm --volumes-from my_data -v $(pwd):/backup ubuntu tar cvf /backup/backup.tar /var/lib/mysql

docker run -d -v $(pwd):/backup --name data-backup ubuntu /bin/sh -c "cd / && tar xvf /backup/backup.tar"

 docker commit data-backup ayanovsk/data-backup
 docker push ayanovsk/data-backup


         //  on another VM or after cleaning all docker stuff on the same machine to be able to test that everything comes form the hub, run:


docker run -v /var/lib/mysql --entrypoint "bin/sh" --name data-container ayanovsk/data-backup

docker run --volumes-from=data-container --name mysql_for_data -e MYSQL_ROOT_PASSWORD=cs6440exp -d mysql:5.7

docker run -it --link mysql_for_data:mysql --rm mysql sh -c 'exec mysql -h"$MYSQL_PORT_3306_TCP_ADDR" -P"$MYSQL_PORT_3306_TCP_PORT" -uroot -p"$MYSQL_ENV_MYSQL_ROOT_PASSWORD"'

//now check that we see the data we populated before sending stuff to hub



















